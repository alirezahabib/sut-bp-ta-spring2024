15
max(Money(0, 'USD'), Money(-100, 'IRT'), Money(50, 'TRY'))
' '.join([str(round(float(part), 2)) if i == 0 else part for i, part in enumerate(str((Money(50, 'GBP') - Money(30, 'CHF')).convert('CAD')).split())])
' '.join([str(round(float(part), 2)) if i == 0 else part for i, part in enumerate(str(Money(-100, 'IRT').convert('USD') + Money(50, 'TRY')).split())])
sorted([Money(1, 'CHF'), Money(-1, 'CHF'), Money(1, 'IRT')], key=lambda x: x.convert('USD').amount)
' '.join([str(round(float(part), 2)) if i == 0 else part for i, part in enumerate(str(Money(100, 'EUR') + Money(200, 'CAD') - Money(150, 'USD')).split())])
' '.join([str(round(float(part), 2)) if i == 0 else part for i, part in enumerate(str(Money(5, 'USD') * (Money(300, 'GBP') / Money(10, 'EUR'))).split())])
' '.join([str(round(float(part), 2)) if i == 0 else part for i, part in enumerate(str(Money(50, 'TRY') + Money(1, 'USD').convert('IRT')).split())])
' '.join([str(round(float(part), 2)) if i == 0 else part for i, part in enumerate(str(sum([Money(0, 'CAD'), Money(0, 'USD'), Money(0, 'EUR')], Money(1, 'IRT'))).split())])
sorted([Money(1, 'USD'), Money(1, 'EUR'), Money(-1, 'USD')], key=lambda x: x.convert('GBP').amount)
' '.join([str(round(float(part), 2)) if i == 0 else part for i, part in enumerate(str(Money(0.5, 'GBP') * 2 + Money(-1, 'EUR')).split())])
' '.join([str(round(float(part), 2)) if i == 0 else part for i, part in enumerate(str(Money(100, 'IRT') / 100 + Money(1, 'USD')).split())])
' '.join([str(round(float(part), 2)) if i == 0 else part for i, part in enumerate(str((Money(1, 'CHF') - Money(1, 'USD')).convert('GBP')).split())])
' '.join([str(round(float(part), 2)) if i == 0 else part for i, part in enumerate(str(Money(50, 'CAD').convert('TRY') + Money(25, 'EUR')).split())])
' '.join([str(round(float(part), 2)) if i == 0 else part for i, part in enumerate(str(sum([Money(10, 'GBP'), Money(-10, 'USD'), Money(5, 'CHF')], Money(0, 'EUR'))).split())])
sorted([Money(-1, 'IRT'), Money(1, 'USD'), Money(1, 'CHF')], key=lambda x: x.convert('CAD').amount)

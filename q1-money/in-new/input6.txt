13
' '.join([str(round(float(part), 2)) if i == 0 else part for i, part in enumerate(str((Money(500, 'USD') + Money(100000, 'IRT')).convert('CAD') - Money(50, 'EUR')).split())])
sorted([Money(-50, 'EUR'), Money(100, 'USD'), Money(0, 'IRT'), Money(50, 'GBP')], reverse=True)
max(Money(200, 'CAD'), Money(150, 'USD'), Money(300, 'EUR'))
min(Money(-100, 'CHF'), Money(-50, 'CAD'), Money(0, 'USD'))
' '.join([str(round(float(part), 2)) if i == 0 else part for i, part in enumerate(str(sum([Money(10, 'IRT'), Money(200, 'CHF'), Money(-5, 'EUR')], Money(0, 'IRT'))).split())])
' '.join([str(round(float(part), 2)) if i == 0 else part for i, part in enumerate(str(Money(100, 'USD') + Money(-50000, 'IRT') * 2).split())])
' '.join([str(round(float(part), 2)) if i == 0 else part for i, part in enumerate(str(Money(50, 'CAD').convert('CHF') / Money(25, 'USD')).split())])
' '.join([str(round(float(part), 2)) if i == 0 else part for i, part in enumerate(str(Money(-20, 'EUR') + Money(50, 'GBP') - Money(30, 'CAD')).split())])
' '.join([str(round(float(part), 2)) if i == 0 else part for i, part in enumerate(str((Money(200, 'USD') / 2).convert('GBP')).split())])
' '.join([str(round(float(part), 2)) if i == 0 else part for i, part in enumerate(str((Money(-100, 'CHF') + Money(200, 'EUR')).convert('USD')).split())])
sorted([Money(1, 'USD'), Money(-1, 'USD'), Money(0.5, 'USD')], key=lambda x: x.amount)
' '.join([str(round(float(part), 2)) if i == 0 else part for i, part in enumerate(str(Money(300, 'CAD') // 5 + Money(100, 'TRY')).split())])
' '.join([str(round(float(part), 2)) if i == 0 else part for i, part in enumerate(str(Money(500, 'GBP') / Money(50, 'CHF') * 10).split())])
